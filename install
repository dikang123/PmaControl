#!/bin/bash

#check OSTYPE

case "$OSTYPE" in
  solaris*) OS="SOLARIS" ;;
  darwin*)  OS="OSX" ;; 
  linux*)   OS="LINUX" ;;
  bsd*)     OS="BSD" ;;
  msys*)    OS="WINDOWS" ;;
  *)        OS="unknown: $OSTYPE" ;;
esac

if [ "$OS" != "LINUX" ]
then
    echo "This OS is not supported : $OS"
    exit 1;
else
    echo "This OS is supported : $OS"
fi


#Check distribution GNU / Linux

dist=`grep DISTRIB_ID /etc/*-release | awk -F '=' '{print $2}'`

DIOK="OK"
case "$dist" in
  Ubuntu*) DISTRIB="Ubuntu" ;;
  Debian*) DISTRIB="Debian" ;;
  Redhat*) DISTRIB="RedHat" ;;
  Centos*) DISTRIB="Centos" ;;
  *)       
        DISTRIB=$dist
        DIOK="KO"
 ;;
esac


if [ "$DIOK" != "OK" ]
then
    echo "This distribution GNU/Linux is not supported : $DISTRIB"
    exit 1;
else
    echo "This distribution GNU/Linux is supported : $DISTRIB"
fi

#check version supported
# TODO


workFolder=$(readlink -f $(dirname $0))
path=`echo $workFolder | awk -F"/" ' { print $(NF) } '`

cp -a config_sample/*.config.php configuration/
cp -a config_sample/*.ini.php configuration/
cp -a config_sample/*.ini configuration/

cat > configuration/db.config.ini.php << EOF
[noname]
gg=fake_data
gt=just the time to generate a good one
EOF

cat > configuration/db.config.php << EOF
<?php
 if (! defined('DB_DEFAULT'))
 {
     define("DB_DEFAULT", "pmacontrol");
 }
EOF

cat >  configuration/webroot.config.php << EOF
<?php

/*
 * if you use a direrct DNS set : define('WWW_ROOT', "/");
 * if you dev in local or other use : define('WWW_ROOT', "/path_to_the_final_directory/");
 * example : http://127.0.0.1/directory/myapplication/ => define('WWW_ROOT', "/directory/myapplication/");
 * Don't forget the final "/"
 */


if (! defined('WWW_ROOT'))
{
    define('WWW_ROOT', "/$path/");
}
EOF

chmod 777 -R tmp/





cat > /etc/init.d/disable-transparent-hugepages << EOF
#!/bin/sh
### BEGIN INIT INFO
# Provides:          disable-transparent-hugepages
# Required-Start:    $local_fs
# Required-Stop:
# X-Start-Before:    mongod mongodb-mms-automation-agent
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Disable Linux transparent huge pages
# Description:       Disable Linux transparent huge pages, to improve
#                    database performance.
### END INIT INFO



#why $1 doesn't work ?
case "start" in
  start)
    if [ -d /sys/kernel/mm/transparent_hugepage ]; then
      thp_path=/sys/kernel/mm/transparent_hugepage
    elif [ -d /sys/kernel/mm/redhat_transparent_hugepage ]; then
      thp_path=/sys/kernel/mm/redhat_transparent_hugepage
    else
      return 0
    fi

    echo 'never' > ${thp_path}/enabled
    echo 'never' > ${thp_path}/defrag

    unset thp_path
    ;;
esac

EOF



chmod 755 /etc/init.d/disable-transparent-hugepages


#Debian & Ubuntu
if ! [ -x "$(command -v update-rc.d)" ]; then
    echo 'update-rc.d is not installed.' >&2
else
    update-rc.d disable-transparent-hugepages defaults
fi



#SUSE

if ! [ -x "$(command -v insserv)" ]; then
    echo 'insserv is not installed.' >&2
else
    insserv /etc/init.d/disable-transparent-hugepages
fi


#Red Hat, CentOS, Amazon Linux, and derivatives
if ! [ -x "$(command -v chkconfig)" ]; then
    echo 'chkconfig is not installed.' >&2
else
    chkconfig --add disable-transparent-hugepages
fi



if [ -x "/etc/init.d/disable-transparent-hugepages" ]; then
    /etc/init.d/disable-transparent-hugepages start
fi

if [ -x ./etc/init.d/mysql ]; then
    /etc/init.d/mysql restart
fi


if [ -x ./etc/init.d/mysqld ]; then
    /etc/init.d/mysqld restart
fi


#check composer && composer install

if test -f ./vendor/glial/glial/Glial/Bootstrap.php; then
   echo "Glial Installed !"
else
    composer -V foo >/dev/null 2>&1 || { echo >&2 "PmaControl require composer but it's not installed.  Aborting."; echo "To install composer : ";echo ""; echo "        curl -sS https://getcomposer.org/installer | php";  echo "        \$ mv composer.phar /usr/local/bin/composer"; echo ""; exit 1;}
    composer install
fi


php application/webroot/index.php install index

php application/webroot/index.php install createOrganisation

php application/webroot/index.php install createAdmin

php application/webroot/index.php agent updateServerList






# install crontab
#*      *       *       *       *       cd /data/www/pmacontrol && ./glial dot generateCache


# set du daemon SELECT * FROM `daemon_main` (choisir les valeus en fonction de la machine) 